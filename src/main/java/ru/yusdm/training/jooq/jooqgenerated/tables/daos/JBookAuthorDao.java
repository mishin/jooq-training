/*
 * This file is generated by jOOQ.
 */
package ru.yusdm.training.jooq.jooqgenerated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;

import ru.yusdm.training.jooq.jooqgenerated.tables.JBookAuthor;
import ru.yusdm.training.jooq.jooqgenerated.tables.records.JBookAuthorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JBookAuthorDao extends DAOImpl<JBookAuthorRecord, ru.yusdm.training.jooq.jooqgenerated.tables.pojos.JBookAuthor, Record2<Long, Long>> {

    /**
     * Create a new JBookAuthorDao without any configuration
     */
    public JBookAuthorDao() {
        super(JBookAuthor.BOOK_AUTHOR, ru.yusdm.training.jooq.jooqgenerated.tables.pojos.JBookAuthor.class);
    }

    /**
     * Create a new JBookAuthorDao with an attached configuration
     */
    public JBookAuthorDao(Configuration configuration) {
        super(JBookAuthor.BOOK_AUTHOR, ru.yusdm.training.jooq.jooqgenerated.tables.pojos.JBookAuthor.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Long, Long> getId(ru.yusdm.training.jooq.jooqgenerated.tables.pojos.JBookAuthor object) {
        return compositeKeyRecord(object.getAuthorId(), object.getBookId());
    }

    /**
     * Fetch records that have <code>AUTHOR_ID IN (values)</code>
     */
    public List<ru.yusdm.training.jooq.jooqgenerated.tables.pojos.JBookAuthor> fetchByJAuthorId(Long... values) {
        return fetch(JBookAuthor.BOOK_AUTHOR.AUTHOR_ID, values);
    }

    /**
     * Fetch records that have <code>BOOK_ID IN (values)</code>
     */
    public List<ru.yusdm.training.jooq.jooqgenerated.tables.pojos.JBookAuthor> fetchByJBookId(Long... values) {
        return fetch(JBookAuthor.BOOK_AUTHOR.BOOK_ID, values);
    }
}
